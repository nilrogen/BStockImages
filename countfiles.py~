import csv
import os
import os.path as path
import glob

#_MANIFEST_PATH = 'C:\Users\Mike Work\Dropbox\Marketplace Images\Costco Manifest'
#_IMAGES_PATH = 'C:\Users\Mike Work\Dropbox\Marketplace Images\Costco Images'
#_FNAME = 'C:\Users\Mike Work\Desktop\mAllFiles.csv'

_MANIFEST_PATH = '/home/michael/Dropbox/Marketplace Images/Costco Manifest'
_IMAGES_PATH = '/home/michael/Dropbox/Marketplace Images/Costco Images'
_FNAME = '/home/michael/Desktop/mAllFiles.csv'

class Item:
    def __init__(self, itemnum, description, found=False):
        self.itemnum = itemnum
        self.description = description
        self.found = found

    def __eq__(self, other):
        return hash(self) == hash(other)

    def __hash__(self):
        return hash(self.itemnum)

    def __cmp__(self, other):
        return self.itemnum - other.itemnum

    def __str__(self):
        return "%d %s,%d\n" % (self.itemnum, self.description, self.found)

def findCols(csvin):
    # Take first item, return col of item # and description
    num, des = 0, 0
    value = csvin.next()

    for i in range(len(value)):
        if value[i].find('Costco Item #') != -1:
            num = i
        elif value[i].find('Description') != -1:
            des = i
    return num, des
    
def parseCSV(itemset, fin):
    #Find item number column
    csvin = csv.reader(fin)
    num, des = findCols(csvin)
    f = 0

    for value in csvin:
        try:
            ival = int(value[num])
        except:
            print value
        if ival not in itemset:
            itemset.add(Item(ival, value[des]))
        else:
            f += 1 
    return f == len(itemset)
            
def removeFileType(fname):
    return fname.split('.')[0]

def eliminateFound(itemset, imagelist):
    newset = itemset.copy()
    for item in newset:
        if item.itemnum in imagelist:
            itemset.remove(item)
            
def generateSet():
    files = map(lambda p: path.join(_MANIFEST_PATH, p), os.listdir(_MANIFEST_PATH))
    images = map(lambda f: int(removeFileType(f)), os.listdir(_IMAGES_PATH))

    itemset = set()
    for filepath in files:
        if filepath == 'AllFiles.csv':
            continue
        
        fin = open(filepath)
        rv = parseCSV(itemset, fin)
        fin.close()

        if rv:
            print filepath

    eliminateFound(itemset, images)
    return itemset
    


if __name__ == '__main__':
    
    itemset = generateSet()

    fout = open(path.join(_MANIFEST_PATH, _FNAME), 'wb')
    fout.write('Item #,Description,found\n')
    for value in sorted(itemset, lambda x, y: x.itemnum - y.itemnum):
        fout.write(str(value))
    fout.close()
